---
title : "Lecture 1.3"
date: 2024-01-08
---

## Advantages of ggplot

-   consistent underlying `grammar of graphics`

-   super flexible, layered plot specification

-   theme system for polishing plot appearance

-   lots of additional functionality thanks to extensions

-   active and helpful community

graphic layers

1.  data (in tidy format) and defining aesthetics
2.  geometric objects (aka geoms) - define the type of plots
3.  statistical transforations
4.  position adjustments
5.  coordinate systems
6.  facet

Enhance communication using additional layers

1.  labels - add/update titles, axis/legend labels
2.  annotations - add textual lables
3.  scales - update how the aesthetic mappings manifest visually
4.  themes - customize the non-data elements of your plot
5.  layout - combine multiple plots into the same graphic

tidy data :

-   each variable is a column

-   each observation forms a row

-   each cell is a single measurement

## Tidy Data

```{r message=FALSE}
library(tidyverse)
library(palmerpenguins)
```

```{r}
# untidy data ----
temp_data_wide <- tribble(
  ~date, ~station1, ~station2,  ~station3,
  "2023-10-01", 30.1, 29.8,  31.2,
  "2023-11-01", 28.6, 29.1,  33.4,
  "2023-12-01", 29.9, 28.5,  32.3
)

# make tidy ---
temp_data_long <- temp_data_wide %>% 
  pivot_longer(cols = starts_with("station"),
               names_to = "station_id",
               values_to = "temp_c")
```

`temp_data_wide` is untidy because each station is its own column, when it should be a row

### Plot #1 ; exploring the relationship between penguin bill length and bill depth

```{r}
## str(obj) gives variable names and variable types and dimension of dataframe
# mapping color globally 
ggplot(na.omit(penguins),
       mapping = aes(x = bill_length_mm, 
                     y = bill_depth_mm, 
                     color = species)) + 
  geom_point()+
  geom_smooth(method = 'lm')+
  scale_color_manual(values = c("darkorange","purple","cyan4"))

# mapping color locally 
ggplot(na.omit(penguins),
      aes(x = bill_length_mm, 
                     y = bill_depth_mm)) + 
  geom_point(aes(color = species ))+
  geom_smooth(method = "lm")+
  scale_color_manual(values = c("darkorange","purple","cyan4"))
# piping into a ggplot ---
# penguins %>% 
#   ggplot(aes(x = bill_length_mm, y = bill_depth_mm))

# ggplot()+
#   geom_point(data = penguins, mapping = aes(x = bill_length_mm, y = bill_depth_mm))
```

```{r}
## using continuous variable

ggplot(penguins, aes(x = body_mass_g,
                     y = flipper_length_mm,
                     color = body_mass_g))+
  geom_point()+
  scale_color_gradient(low = "#132b43",high = "#f7dd4c")
```

## Plot 2

```{r}
ggplot(penguins, aes(x = species))+
  geom_bar()
```

Overriding geom_bar's stat:

```{r}
penguins_summary <- penguins %>% 
  count(species)

ggplot(penguins_summary, aes(x = species, y = n ))+
  geom_bar(stat = 'identity') #height of bars equal to value of n column 
```

override default stat mapping

```{r}
ggplot(penguins, aes(x = species, y = after_stat(prop), group = 1))+
  geom_bar()
```

position adjustments

```{r}
ggplot(penguins, aes(x = species, fill = island))+
  geom_bar(position = position_dodge2(preserve = 'single'))
```

coordinate systems + themes

```{r}
ggplot(penguins, aes(x = species))+
  geom_bar()+
  coord_flip()+
  theme_classic() + 
  theme(
    axis.title = element_text(size = 17, color = 'purple')
  )
```
